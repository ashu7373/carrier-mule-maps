%dw 2.0
output application/json
var type_reference = payload.MercuryGate.MasterBillOfLading.*ReferenceNumbers.*ReferenceNumber.@."type"
var pk_appt = payload.MercuryGate.MasterBillOfLading.Dates.*Pickup.*Date.@."type"
var del_appt = payload.MercuryGate.MasterBillOfLading.Dates.*Drop.*Date.@."type"
var lat = payload.MercuryGate.MasterBillOfLading.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.*Event.Address.GeoLoc.@

var ext_id = (type_reference as Array find "Customer Acct Number")[0]
var id1 = (type_reference as Array find "PO Number")[0]
var id2 = (type_reference as Array find "PRO")[0]
var id3 = (type_reference as Array find "BOL")[0]
var phone = (type_reference as Array find "Driver Phone Number")[0]
var truck = (type_reference as Array find "Tractor Number")[0]
var trailer = (type_reference as Array find "Trailer Number")[0]
var early_pk_appt = (pk_appt as Array find "earliest")[0]
var latest_pk_appt = (pk_appt as Array find "latest")[0]
var actual_pk_appt = (pk_appt as Array find "actual")[0]
var latitude = ((lat as Array default []) [0] default [])[0] default ""
var longitude = ((lat as Array default []) [0] default [] )[2] default ""

var early_del_appt = (del_appt as Array find "earliest")[0]
var latest_del_appt = (del_appt as Array find "latest")[0]
var actual_del_appt = (del_appt as Array find "actual")[0]

var payload_body = payload.MercuryGate.*MasterBillOfLading default [] map {
	externalId: lower(($.ReferenceNumbers) [ext_id]) default "",
	identifier1: ($.ReferenceNumbers) [id1] default "",
	identifier2: ($.ReferenceNumbers) [id2] default "",
	identifier3: ($.ReferenceNumbers) [id3] default "",
	truckNumber: ($.ReferenceNumbers) [truck] default "",
	trailerNumber: ($.ReferenceNumbers) [trailer] default "",
	driverPhone: ($.ReferenceNumbers) [phone] default "",
	operatingCarrierScac: if ( !isEmpty($.Carriers.Carrier.MCNumber)) $.Carriers.Carrier.MCNumber else $.Carriers.Carrier.USDOT default "",
	statusCode: $.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "",
	statusDescription: if ($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "AF") "Picked Up"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "A3") "Load Returned"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "A7") "Load Refused"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "A9") "Load Damaged"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "CA") "Load Cancelled"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "K1") "Customs"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "P1") "Departed Terminal"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "SD") "Delayed"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "X4") "Arrived At Terminal"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "X3") "At Pickup"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "D1") "Delivered"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "X1") "At Consignee"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "X2") "Delayed"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "AA") "Pickup Scheduled"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "AB") (if  (isEmpty($.StatusDetails.StatusDetail.ShipmentAppointmentReason)) "" else if  ($.StatusDetails.StatusDetail.ShipmentAppointmentReason as String contains "AM") "Delivery Scheduled - Loaded On Truck" else "Delivery Scheduled")
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "OO") "Shipment Not Received"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "XB") "Shipment Acknowledged"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "CP") "Completed Loading"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "L1") "Loading"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "AI") "Shipment Reconsigned"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "AM") "Loaded On Truck"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "BA") "Cartage Pickup"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "CL") "Trailer Closed Out"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "J1") "Delivered To Connecting Line"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "PR") "Customs Hold"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "UD") "Unknown Carrier Status"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "UL") "Unloaded"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "X6") "In Transit"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "AH") "Attempted Delivery"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "AJ") "Tendered For Delivery"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "AP") "Delivery Not Completed"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "AV") "Available For Delivery"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "S1") "Trailer Spotted"
    else if($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode default "" as String contains "AG") "ETA Update"
	else "New Activity" default "",
	eventTimeStamp: $.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.Date default "",
	city: $.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.Location.Address.City default "",
	state: $.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.Location.Address.StateProvince default "",
	
	
}

var location_body = payload.MercuryGate.*MasterBillOfLading default [] map {
	externalId: lower(($.ReferenceNumbers) [ext_id]) default "",
	identifier1: ($.ReferenceNumbers) [id1] default "",
	identifier2: ($.ReferenceNumbers) [id2] default "",
	identifier3: ($.ReferenceNumbers) [id3] default "",
	locatedAt: $.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.Date default ""
	, latitude: ((latitude as Number default 0 )/ 1000000.0 ) as String default ""
	, longitude: "-" ++ ((longitude as Number default 0 )/ 1000000.0 ) as String default ""
}

var pickup_body = payload.MercuryGate.*MasterBillOfLading default [] map {
	externalId: lower(($.ReferenceNumbers) [ext_id]) default "",
	identifier1: ($.ReferenceNumbers) [id1] default "",
	identifier2: ($.ReferenceNumbers) [id2] default "",
	identifier3: ($.ReferenceNumbers) [id3] default "",
	earliestAppointmentTime: ($.Dates.Pickup) [early_pk_appt] default "",
	latestAppointmentTime: ($.Dates.Pickup) [latest_pk_appt] default "",
	identifier4: "1",
	//pickupTime: ($.Dates.Pickup) [actual_pk_appt] default ""

}

var del_body = payload.MercuryGate.*MasterBillOfLading default [] map {
	externalId: lower(($.ReferenceNumbers) [ext_id]) default "",
	identifier1: ($.ReferenceNumbers) [id1] default "",
	identifier2: ($.ReferenceNumbers) [id2] default "",
	identifier3: ($.ReferenceNumbers) [id3] default "",
	earliestAppointmentTime: ($.Dates.Drop) [early_del_appt] default "",
	latestAppointmentTime: ($.Dates.Drop) [latest_del_appt] default "",
	identifier4: "2",
	//deliveredAt: if ($.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.StatusCode == "D1") $.Plan.Events.Event.TrackingMessages.ShipmentStatus.StatusDetails.StatusDetail.Date else ($.Dates.Drop) [actual_del_appt] default ""

	
	
}
---
 payload_body filter $ != {} ++
	del_body filter $ != {} ++
	pickup_body filter $ != {} ++
	location_body filter $ != {}
